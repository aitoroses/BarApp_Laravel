{
  "author": {
    "name": "Sudhir Jonathan",
    "email": "contact.me@sudhirjonathan.com",
    "url": "http://www.sudhirjonathan.com"
  },
  "name": "simply-deferred",
  "description": "A deferred library for Node.js and the browser with a simplified jQuery compatible API",
  "version": "1.3.2",
  "homepage": "http://sudhirj.github.com/simply-deferred/",
  "repository": {
    "type": "git",
    "url": "git://github.com/sudhirj/simply-deferred.git"
  },
  "main": "./deferred",
  "dependencies": {},
  "devDependencies": {
    "mocha": "",
    "underscore": ""
  },
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "#Simply Deferred\n###Simplified jQuery Deferred API for Node and the browser\n\n##Installation\n    npm install simply-deferred\n\nIf you're on a browser, simply include \n    https://raw.github.com/sudhirj/simply-deferred/master/deferred.min.js\n\n##Usage\n    var Deferred = require('simply-deferred').Deferred;    \n    var rendering = new Deferred();\n    rendering.done(function(){\n        console.log('Finished rendering');\n    });\n    \n    //...\n    \n    rendering.resolve();\n    \n##API\nSimply Deferred is partially compatible with jQuery's API, so the [docs and usage](http://api.jquery.com/category/deferred-object/) are the same, except that they're restricted to the following methods:\n\n* `Deferred()`\n* `deferred.state()`\n* `deferred.done()`\n* `deferred.fail()`\n* `deferred.always()`\n* `deferred.promise()`\n* `deferred.resolve()`\n* `deferred.resolveWith()`\n* `deferred.rejectWith()`\n* `deferred.reject()`\n* `deferred.pipe()`\n* `deferred.then()`\n* `when()`\n\n###Usage with Zepto\nSimply Deffered also acts as a plugin to [Zepto](http://zeptojs.com/). The absence of a Deferred library was one of the biggest reasons I've been holding back, so I thought it made sense to write one. Once you have both Zepto and Simply Deferred on your page, just do `Deferred.installInto(Zepto)` to set it up. The installation makes the following changes to bring it closer to jQuery:\n\n* Aliases the `Deferred` constructor to `$.Deferred`.\n* Aliases the `when` method to `$.when`.\n* Wraps `$.ajax` to return a `promise`, which has only the following methods: `state()`, `done()`, `fail()` and `always()`. The arguments passed to the `done` and `fail` callbacks are the same ones passed to the `success` and `error` options.\n",
  "readmeFilename": "README.md",
  "_id": "simply-deferred@1.3.2",
  "dist": {
    "shasum": "b7132934bcb67c88dc863e6874c30dac7245ffe4"
  },
  "_from": "simply-deferred@",
  "_resolved": "https://registry.npmjs.org/simply-deferred/-/simply-deferred-1.3.2.tgz"
}
